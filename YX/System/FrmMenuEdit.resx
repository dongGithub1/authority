<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic_menu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>